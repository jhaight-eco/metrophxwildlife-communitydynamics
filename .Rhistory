# add a column for the covariate
preds.sr.urb1$impervious <- seq(min(cov1), max(cov1), length.out = npred)
preds.sr.urb1$impervious_std <- seq(min(cov1.std), max(cov1.std), length.out = npred)
str(preds.sr.urb1)
# repeat for each season, using the different betas in each season
# Season 2: Warm-Wet
preds.sr.urb2 <- exp(m.sr.mcmc.s2[,1:ncol(dm.urb)] %*% t(dm.urb))   # note that it is now m.sr.mcmc.s2
preds.sr.urb2 <- apply(
preds.sr.urb2,
2,
quantile,
probs = c(0.025,0.5,0.975)
) %>% t() %>% data.frame()
colnames(preds.sr.urb2)[1:3] <- c("lower95", "median", "upper95")
preds.sr.urb2$impervious <- seq(min(cov1), max(cov1), length.out = npred)
preds.sr.urb2$impervious_std <- seq(min(cov1.std), max(cov1.std), length.out = npred)
str(preds.sr.urb2)
# Season 3: Cool-Wet
preds.sr.urb3 <- exp(m.sr.mcmc.s3[,1:ncol(dm.urb)] %*% t(dm.urb))   # m.sr.mcmc.s3
preds.sr.urb3 <- apply(
preds.sr.urb3,
2,
quantile,
probs = c(0.025,0.5,0.975)
) %>% t() %>% data.frame()
colnames(preds.sr.urb3)[1:3] <- c("lower95", "median", "upper95")
preds.sr.urb3$impervious <- seq(min(cov1), max(cov1), length.out = npred)
preds.sr.urb3$impervious_std <- seq(min(cov1.std), max(cov1.std), length.out = npred)
str(preds.sr.urb3)
# 2) Predict across Patch Diversity Gradient
dm.pdiv <- cbind(
# Season 1
1,# intercept
0, #urban
0, # urbanization quadratic term
seq(min(cov3.std),max(cov3.std), length.out = npred)#, # patch diversity
#0  # veg productivity. This was standardized by season, so we can use the same value here across all seasons
)
preds.sr.pdiv1 <- exp(m.sr.mcmc.s1[,1:ncol(dm.pdiv)] %*% t(dm.pdiv))   # exponentiate, because that's the reverse of the log-link
preds.sr.pdiv1 <- apply(
preds.sr.pdiv1,
2,
quantile,
probs = c(0.025,0.5,0.975)
) %>% t() %>% data.frame()
colnames(preds.sr.pdiv1)[1:3] <- c("lower95", "median", "upper95")
# add a column for the covariate
preds.sr.pdiv1$sdhi <- seq(min(cov3), max(cov3), length.out = npred)
preds.sr.pdiv1$sdhi_std <- seq(min(cov3.std), max(cov3.std), length.out = npred)
str(preds.sr.pdiv1)
# repeat for each season, using the different betas in each season
# Season 2: Warm-Wet
preds.sr.pdiv2 <- exp(m.sr.mcmc.s2[,1:ncol(dm.pdiv)] %*% t(dm.pdiv))   # note that it is now m.sr.mcmc.s2
preds.sr.pdiv2 <- apply(
preds.sr.pdiv2,
2,
quantile,
probs = c(0.025,0.5,0.975)
) %>% t() %>% data.frame()
colnames(preds.sr.pdiv2)[1:3] <- c("lower95", "median", "upper95")
preds.sr.pdiv2$sdhi <- seq(min(cov3), max(cov3), length.out = npred)
preds.sr.pdiv2$sdhi_std <- seq(min(cov3.std), max(cov3.std), length.out = npred)
str(preds.sr.pdiv2)
# Season 3: Cool-Wet
preds.sr.pdiv3 <- exp(m.sr.mcmc.s3[,1:ncol(dm.pdiv)] %*% t(dm.pdiv))   # m.sr.mcmc.s3
preds.sr.pdiv3 <- apply(
preds.sr.pdiv3,
2,
quantile,
probs = c(0.025,0.5,0.975)
) %>% t() %>% data.frame()
colnames(preds.sr.pdiv3)[1:3] <- c("lower95", "median", "upper95")
preds.sr.pdiv3$sdhi <- seq(min(cov3), max(cov3), length.out = npred)
preds.sr.pdiv3$sdhi_std <- seq(min(cov3.std), max(cov3.std), length.out = npred)
str(preds.sr.pdiv3)
preds.sr.urb <- rbind(
preds.sr.urb1 %>% mutate(season = "1_wd"),
preds.sr.urb2 %>% mutate(season = "2_ww"),
preds.sr.urb3 %>% mutate(season = "3_cw"))  #  %>% str()
##### Plot Actual Richness Estimates Across Urbanization #####
palette_ggdemo(wildflower)
# reshape the data for easier plotting
data.long <- rbind(
data %>% mutate(season = "1_wd") %>% select(site, season, imp1km, sdhi5km, "ndvi" = ndvi_wd1km, "rich_mean" = rich_wd_mean, "rich_2_5"= rich_wd_2_5, "rich_97_5"= rich_wd_97_5),
data %>% mutate(season = "2_ww") %>% select(site, season, imp1km, sdhi5km, "ndvi" = ndvi_ww1km, "rich_mean"= rich_ww_mean, "rich_2_5"= rich_ww_2_5, "rich_97_5"= rich_ww_97_5),
data %>% mutate(season = "3_cw") %>% select(site, season, imp1km, sdhi5km, "ndvi" = ndvi_cw1km, "rich_mean"= rich_cw_mean, "rich_2_5"= rich_cw_2_5, "rich_97_5"= rich_cw_97_5)
) #%>% str()
# poppy orange and brittlebush yellow
wildflower[c(16,18)]
plot.wd <- ggplot() +
geom_pointrange(data = data, aes(x = imp1km, y = rich_wd_mean, ymin = rich_wd_2_5, ymax = rich_wd_97_5),
col = "#ff8701", fatten = 1)+
stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#f2ff0d", col = "#ff8701",
method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
#geom_smooth(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
#            fill = "#f2ff0d", color = "#ff8701", se = FALSE, linetype = "dashed")+
theme_bw() +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.wd
# prickly pear pinks
wildflower[c(4,5)]
plot.ww
ggsave("./figures/richness_actual_vs_urb_allseasons.png",
plot.all,
width = 6,
height = 5,
units = "in",
dpi = 300)
##### Plot Predicted Richness across Hypothetical Gradients  #####
##### Urbanization vs. Species Richness Predictions by Season #####
# Predicted species richness
palette_ggdemo(wildflower)
plot.wd
plot.wd <- ggplot() +
theme_bw(base_size = 11) +
#geom_errorbar(data = data, aes(x = imp1km, y = rich_wd_mean, ymin = rich_wd_2_5, ymax = rich_wd_97_5),
#              lwd = 0.3, alpha = 0.3) +
#geom_point(data = data, aes(x = imp1km, y = rich_wd_mean, ymin = rich_wd_2_5, ymax = rich_wd_97_5))+
geom_ribbon(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#f2ff0d") +
geom_smooth(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
fill = "#f2ff0d", color = "#ff8701", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#f2ff0d", col = "#ff8701",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
# 32, 54, 16, fill/color
plot.ww <- ggplot() +
theme_bw() +
geom_ribbon(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#ff23c1") + #"#ff23c1"
geom_smooth(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#ff23c1", col = "#d10073", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#ff23c1", col = "#d10073",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.ww
plot.cw <- ggplot() +
geom_ribbon(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#7291fb") +
geom_smooth(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#7291fb", color = "#2f3ca3", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#7291fb", col = "#2f3ca3",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
theme_bw() +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.cw
ggsave("./figures/richness_pred_vs_urb_1warmdry.png",
plot.wd,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
ggsave("./figures/richness_pred_vs_urb_2warmwet.png",
plot.ww,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
ggsave("./figures/richness_pred_vs_urb_3coolwet.png",
plot.cw,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
plot.all <- ggplot() +
theme_bw(base_size = 11) +
geom_ribbon(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3,
fill = "#f2ff0d") +
geom_smooth(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
fill = "#f2ff0d", color = "#ff8701", se = FALSE, linetype = "solid")+
geom_ribbon(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3,
fill = "#ff23c1") +
geom_smooth(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#ff23c1", col = "#d10073", se = FALSE, linetype = "dotted")+
geom_ribbon(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3,
fill = "#7291fb") +
geom_smooth(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#7291fb", color = "#2f3ca3",  se = FALSE, linetype = "dashed")+
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
##### Plot Actual AND Predicted Richness across Hypothetical Gradients  #####
##### Urbanization vs. Species Richness Predictions by Season #####
# Predicted species richness
palette_ggdemo(wildflower)
plot.wd <- ggplot() +
theme_bw(base_size = 11) +
#geom_errorbar(data = data, aes(x = imp1km, y = rich_wd_mean, ymin = rich_wd_2_5, ymax = rich_wd_97_5),
#              lwd = 0.3, alpha = 0.3) +
geom_point(data = data, aes(x = imp1km, y = rich_wd_mean, ymin = rich_wd_2_5, ymax = rich_wd_97_5), color = "#ff8701")+
geom_ribbon(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#f2ff0d") +
geom_smooth(data = preds.sr.urb1, aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
fill = "#f2ff0d", color = "#ff8701", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#f2ff0d", col = "#ff8701",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.wd
# 32, 54, 16, fill/color
plot.ww <- ggplot() +
theme_bw() +
geom_ribbon(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#ff23c1") + #"#ff23c1"
geom_smooth(data = preds.sr.urb2, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#ff23c1", col = "#d10073", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#ff23c1", col = "#d10073",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,12))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.ww
plot.cw <- ggplot() +
geom_ribbon(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.5,
fill = "#7291fb") +
geom_smooth(data = preds.sr.urb3, aes(x = impervious, y = median, ymin = lower95, ymax = upper95),
fill = "#7291fb", color = "#2f3ca3", se = FALSE, size = 0.5, linetype = "dashed")+
#stat_smooth(data = data, aes(x = imp1km, y = rich_wd_mean), fill = "#7291fb", col = "#2f3ca3",
#            method = "lm", formula = y ~ x + I(x^2), se = FALSE, size = 0.5) +
theme_bw() +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,12))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.ticks = element_blank(),
axis.title.x = element_text(face = "bold"),
axis.title.y = element_text(face = "bold"),
)
plot.cw
ggsave("./figures/richness_pred_vs_urb_1warmdry.png",
plot.wd,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
ggsave("./figures/richness_pred_vs_urb_2warmwet.png",
plot.ww,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
ggsave("./figures/richness_pred_vs_urb_3coolwet.png",
plot.cw,
width = 3,
height = 2.5,
units = "in",
dpi = 300)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season, linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE) +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
ggsave("./figures/richness__vs_urb_allseasons_actualandpredicted.png",
plot.all,
width = 6,
height = 5,
units = "in",
dpi = 300)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season, linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season, linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season, linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season, linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
preds.sr.urb
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam")
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE)
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3"))
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)+
ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"), show.legend = FALSE)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"))+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
ggsave("./figures/richness__vs_urb_allseasons_actualandpredicted.png",
plot.all,
width = 6,
height = 5,
units = "in",
dpi = 300)
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season, ymin = lower95, ymax = upper95)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"))+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"))+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
plot.all <- ggplot(data = preds.sr.urb, aes(group = season, color = season,
linetype = season, fill = season)) +
theme_bw(base_size = 11) +
geom_ribbon(aes(x = impervious, y = median, ymin = lower95, ymax = upper95), alpha = 0.3, color = "transparent") +
geom_smooth(aes(x = impervious, y = median, ymin = lower95, ymax = upper95,),
se = FALSE, method = "gam") +
scale_color_manual(values = c( "#ff8701", "#d10073", "#2f3ca3")) +
scale_fill_manual(values = c( "#f2ff0d", "#ff23c1", "#7291fb"))+
geom_point(data = data.long, aes(x = imp1km, y = rich_mean)) +
coord_cartesian(xlim=c(0, max(data$imp1km)), ylim=c(0,13))+
labs(x = "Urbanization \n(% Impervious Surface)", y = "Species Richness")  +
theme(axis.text.x = element_text(face = "bold"),
axis.text.y = element_text(face = "bold"),
legend.position = "none",
axis.title.x = element_text(face = "bold", size = 12),
axis.title.y = element_text(face = "bold", size = 12),
)
plot.all
ggsave("./figures/richness__vs_urb_allseasons_actualandpredicted.png",
plot.all,
width = 5,
height = 5,
units = "in",
dpi = 300)
plot.all
ggsave("./figures/richness__vs_urb_allseasons_actualandpredicted.png",
plot.all,
width = 5,
height = 5,
units = "in",
dpi = 300)
ggsave("./figures/richness__vs_urb_allseasons_actualandpredicted.png",
plot.all,
width = 4,
height = 4,
units = "in",
dpi = 300)
